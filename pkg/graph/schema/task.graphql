scalar Date

type Task implements Node {
  id: ID!
  title: String!
  notes: String!
  completed: Boolean!
  due: Date!
  ownedBy: User!
}

type TaskEdge implements Edge {
  cursor: String!
  node: Task!
}

type TaskConnection implements Connection {
  pageInfo: PageInfo!
  edges: [TaskEdge]!
}

input TasksInput {
  completed: Boolean
}

enum TaskOrderFields {
  LATEST
  DUE
}

input CreateTaskInput {
  title: String!
  userId: String!
  notes: String
  completed: Boolean
  due: Date!
}

input UpdateTaskInput {
  id: ID!
  title: String
  notes: String
  completed: Boolean
  due: Time # when nil, update task due with nil
}

input DeleteTaskInput {
  id: ID!
}
